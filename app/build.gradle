plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id "java"
    
    // You can use different versions of GradleRIO between your robot
    // code and Stuylib as long as the updates don't break anything
    id "edu.wpi.first.GradleRIO" version "2020.3.2"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

import org.gradle.internal.os.OperatingSystem

project.ext.jomlVersion = "1.10.0"
project.ext.lwjglVersion = "3.2.3"

switch (OperatingSystem.current()) {
	case OperatingSystem.LINUX:
		def osArch = System.getProperty("os.arch")
		project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
			? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
			: "natives-linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
		break
}

repositories {
    jcenter()

    // Stuylib
    maven { url 'https://jitpack.io' }

    // JOML
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }

    // LWJGL
    mavenCentral()
}

dependencies {
    compile 'com.github.StuyPulse:StuyLib:v2021.0.3'

    compile "org.joml:joml:${jomlVersion}"

	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-opengles"
	implementation "org.lwjgl:lwjgl-stb"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengles::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

}

application {
    // Define the main class for the application.
    mainClass = 'Main'
}


